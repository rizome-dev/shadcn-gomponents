package table

import (
	g "maragu.dev/gomponents"
	html "maragu.dev/gomponents/html"
)

// Examples demonstrates various table configurations
func Examples() g.Node {
	return html.Div(
		html.Class("space-y-8 p-8"),
		
		// Basic Table
		html.Div(
			html.Class("space-y-4"),
			html.H3(html.Class("text-lg font-semibold"), g.Text("Basic Table")),
			TableComponent(Props{},
				HeaderComponent(Props{},
					Row(RowProps{},
						Head(HeadProps{}, g.Text("Invoice")),
						Head(HeadProps{}, g.Text("Status")),
						Head(HeadProps{}, g.Text("Method")),
						Head(HeadProps{Align: "right"}, g.Text("Amount")),
					),
				),
				Body(Props{},
					Row(RowProps{},
						Cell(CellProps{Class: "font-medium"}, g.Text("INV001")),
						Cell(CellProps{}, g.Text("Paid")),
						Cell(CellProps{}, g.Text("Credit Card")),
						Cell(CellProps{Align: "right"}, g.Text("$250.00")),
					),
					Row(RowProps{},
						Cell(CellProps{Class: "font-medium"}, g.Text("INV002")),
						Cell(CellProps{}, g.Text("Pending")),
						Cell(CellProps{}, g.Text("PayPal")),
						Cell(CellProps{Align: "right"}, g.Text("$150.00")),
					),
					Row(RowProps{},
						Cell(CellProps{Class: "font-medium"}, g.Text("INV003")),
						Cell(CellProps{}, g.Text("Unpaid")),
						Cell(CellProps{}, g.Text("Bank Transfer")),
						Cell(CellProps{Align: "right"}, g.Text("$350.00")),
					),
				),
				FooterComponent(Props{},
					Row(RowProps{},
						Cell(CellProps{ColSpan: 3}, g.Text("Total")),
						Cell(CellProps{Align: "right", Class: "font-semibold"}, g.Text("$750.00")),
					),
				),
			),
		),

		// Table with Caption
		html.Div(
			html.Class("space-y-4"),
			html.H3(html.Class("text-lg font-semibold"), g.Text("Table with Caption")),
			TableComponent(Props{},
				Caption(Props{}, g.Text("A list of your recent invoices.")),
				HeaderComponent(Props{},
					Row(RowProps{},
						Head(HeadProps{}, g.Text("Name")),
						Head(HeadProps{}, g.Text("Email")),
						Head(HeadProps{}, g.Text("Role")),
					),
				),
				Body(Props{},
					Row(RowProps{},
						Cell(CellProps{Class: "font-medium"}, g.Text("Liam Johnson")),
						Cell(CellProps{}, g.Text("liam@example.com")),
						Cell(CellProps{}, g.Text("Administrator")),
					),
					Row(RowProps{},
						Cell(CellProps{Class: "font-medium"}, g.Text("Olivia Smith")),
						Cell(CellProps{}, g.Text("olivia@example.com")),
						Cell(CellProps{}, g.Text("Editor")),
					),
				),
			),
		),

		// Sortable Headers
		html.Div(
			html.Class("space-y-4"),
			html.H3(html.Class("text-lg font-semibold"), g.Text("Sortable Headers")),
			TableComponent(Props{},
				HeaderComponent(Props{},
					Row(RowProps{},
						Head(HeadProps{Sortable: true, Sorted: "asc"}, g.Text("Name")),
						Head(HeadProps{Sortable: true}, g.Text("Date")),
						Head(HeadProps{Sortable: true}, g.Text("Amount")),
						Head(HeadProps{}, g.Text("Status")),
					),
				),
				Body(Props{},
					Row(RowProps{},
						Cell(CellProps{}, g.Text("Alice Brown")),
						Cell(CellProps{}, g.Text("2024-01-15")),
						Cell(CellProps{}, g.Text("$120.00")),
						Cell(CellProps{}, 
							html.Span(html.Class("inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800"),
								g.Text("Active"),
							),
						),
					),
					Row(RowProps{},
						Cell(CellProps{}, g.Text("Bob Davis")),
						Cell(CellProps{}, g.Text("2024-01-10")),
						Cell(CellProps{}, g.Text("$80.00")),
						Cell(CellProps{}, 
							html.Span(html.Class("inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800"),
								g.Text("Pending"),
							),
						),
					),
				),
			),
		),

		// Selectable Rows
		html.Div(
			html.Class("space-y-4"),
			html.H3(html.Class("text-lg font-semibold"), g.Text("Selectable Rows")),
			TableComponent(Props{},
				HeaderComponent(Props{},
					Row(RowProps{},
						Head(HeadProps{Class: "w-12"},
							html.Input(html.Type("checkbox"), html.Class("h-4 w-4")),
						),
						Head(HeadProps{}, g.Text("Task")),
						Head(HeadProps{}, g.Text("Status")),
						Head(HeadProps{}, g.Text("Priority")),
					),
				),
				Body(Props{},
					Row(RowProps{Selected: true},
						Cell(CellProps{},
							html.Input(html.Type("checkbox"), html.Class("h-4 w-4"), g.Attr("checked", "true")),
						),
						Cell(CellProps{Class: "font-medium"}, g.Text("Complete documentation")),
						Cell(CellProps{}, g.Text("In Progress")),
						Cell(CellProps{}, g.Text("High")),
					),
					Row(RowProps{},
						Cell(CellProps{},
							html.Input(html.Type("checkbox"), html.Class("h-4 w-4")),
						),
						Cell(CellProps{Class: "font-medium"}, g.Text("Review pull requests")),
						Cell(CellProps{}, g.Text("Todo")),
						Cell(CellProps{}, g.Text("Medium")),
					),
					Row(RowProps{OnClick: `onclick="toggleRow(this)"`},
						Cell(CellProps{},
							html.Input(html.Type("checkbox"), html.Class("h-4 w-4")),
						),
						Cell(CellProps{Class: "font-medium"}, g.Text("Deploy to production")),
						Cell(CellProps{}, g.Text("Done")),
						Cell(CellProps{}, g.Text("Low")),
					),
				),
			),
		),

		// Table Variants
		html.Div(
			html.Class("space-y-4"),
			html.H3(html.Class("text-lg font-semibold"), g.Text("Table Variants")),
			
			// Striped
			html.Div(
				html.Class("space-y-2"),
				html.H4(html.Class("text-sm font-medium"), g.Text("Striped Table")),
				StripedTable(Props{},
					HeaderComponent(Props{},
						Row(RowProps{},
							Head(HeadProps{}, g.Text("Product")),
							Head(HeadProps{}, g.Text("Price")),
							Head(HeadProps{}, g.Text("Stock")),
						),
					),
					Body(Props{},
						Row(RowProps{},
							Cell(CellProps{}, g.Text("Laptop")),
							Cell(CellProps{}, g.Text("$999.00")),
							Cell(CellProps{}, g.Text("12")),
						),
						Row(RowProps{},
							Cell(CellProps{}, g.Text("Mouse")),
							Cell(CellProps{}, g.Text("$29.00")),
							Cell(CellProps{}, g.Text("143")),
						),
						Row(RowProps{},
							Cell(CellProps{}, g.Text("Keyboard")),
							Cell(CellProps{}, g.Text("$79.00")),
							Cell(CellProps{}, g.Text("87")),
						),
						Row(RowProps{},
							Cell(CellProps{}, g.Text("Monitor")),
							Cell(CellProps{}, g.Text("$299.00")),
							Cell(CellProps{}, g.Text("23")),
						),
					),
				),
			),

			// Borderless
			html.Div(
				html.Class("space-y-2"),
				html.H4(html.Class("text-sm font-medium"), g.Text("Borderless Table")),
				BorderlessTable(Props{},
					Body(Props{},
						Row(RowProps{},
							Cell(CellProps{Class: "font-medium"}, g.Text("Total Revenue")),
							Cell(CellProps{Align: "right"}, g.Text("$45,231.89")),
						),
						Row(RowProps{},
							Cell(CellProps{Class: "font-medium"}, g.Text("Total Expenses")),
							Cell(CellProps{Align: "right"}, g.Text("$12,456.32")),
						),
						Row(RowProps{},
							Cell(CellProps{Class: "font-medium"}, g.Text("Net Profit")),
							Cell(CellProps{Align: "right", Class: "text-green-600 font-semibold"}, g.Text("$32,775.57")),
						),
					),
				),
			),

			// Compact
			html.Div(
				html.Class("space-y-2"),
				html.H4(html.Class("text-sm font-medium"), g.Text("Compact Table")),
				CompactTable(Props{},
					HeaderComponent(Props{},
						Row(RowProps{},
							Head(HeadProps{}, g.Text("ID")),
							Head(HeadProps{}, g.Text("Status")),
							Head(HeadProps{}, g.Text("Time")),
						),
					),
					Body(Props{},
						Row(RowProps{},
							Cell(CellProps{}, g.Text("#3210")),
							Cell(CellProps{}, g.Text("Success")),
							Cell(CellProps{}, g.Text("2m ago")),
						),
						Row(RowProps{},
							Cell(CellProps{}, g.Text("#3209")),
							Cell(CellProps{}, g.Text("Processing")),
							Cell(CellProps{}, g.Text("5m ago")),
						),
						Row(RowProps{},
							Cell(CellProps{}, g.Text("#3208")),
							Cell(CellProps{}, g.Text("Failed")),
							Cell(CellProps{}, g.Text("10m ago")),
						),
					),
				),
			),
		),

		// Complex Table
		html.Div(
			html.Class("space-y-4"),
			html.H3(html.Class("text-lg font-semibold"), g.Text("Complex Table")),
			TableComponent(Props{},
				HeaderComponent(Props{},
					Row(RowProps{},
						Head(HeadProps{RowSpan: 2}, g.Text("Name")),
						Head(HeadProps{ColSpan: 2, Align: "center"}, g.Text("Details")),
						Head(HeadProps{RowSpan: 2, Align: "center"}, g.Text("Actions")),
					),
					Row(RowProps{},
						Head(HeadProps{}, g.Text("Department")),
						Head(HeadProps{}, g.Text("Location")),
					),
				),
				Body(Props{},
					Row(RowProps{},
						Cell(CellProps{Class: "font-medium"}, g.Text("John Smith")),
						Cell(CellProps{}, g.Text("Engineering")),
						Cell(CellProps{}, g.Text("New York")),
						Cell(CellProps{Align: "center"},
							html.Div(html.Class("flex justify-center gap-2"),
								html.Button(html.Type("button"), html.Class("text-sm px-2 py-1 border rounded"), g.Text("Edit")),
								html.Button(html.Type("button"), html.Class("text-sm px-2 py-1 border rounded"), g.Text("Delete")),
							),
						),
					),
					Row(RowProps{},
						Cell(CellProps{Class: "font-medium"}, g.Text("Sarah Johnson")),
						Cell(CellProps{}, g.Text("Marketing")),
						Cell(CellProps{}, g.Text("London")),
						Cell(CellProps{Align: "center"},
							html.Div(html.Class("flex justify-center gap-2"),
								html.Button(html.Type("button"), html.Class("text-sm px-2 py-1 border rounded"), g.Text("Edit")),
								html.Button(html.Type("button"), html.Class("text-sm px-2 py-1 border rounded"), g.Text("Delete")),
							),
						),
					),
				),
			),
		),

		// Responsive Table
		html.Div(
			html.Class("space-y-4"),
			html.H3(html.Class("text-lg font-semibold"), g.Text("Responsive Table")),
			html.P(html.Class("text-sm text-muted-foreground"), g.Text("Try resizing your browser to see horizontal scroll")),
			ResponsiveTable(Props{},
				HeaderComponent(Props{},
					Row(RowProps{},
						Head(HeadProps{}, g.Text("Order ID")),
						Head(HeadProps{}, g.Text("Customer")),
						Head(HeadProps{}, g.Text("Email")),
						Head(HeadProps{}, g.Text("Product")),
						Head(HeadProps{}, g.Text("Quantity")),
						Head(HeadProps{}, g.Text("Price")),
						Head(HeadProps{}, g.Text("Total")),
						Head(HeadProps{}, g.Text("Status")),
						Head(HeadProps{}, g.Text("Date")),
					),
				),
				Body(Props{},
					Row(RowProps{},
						Cell(CellProps{}, g.Text("ORD-001")),
						Cell(CellProps{}, g.Text("Alice Brown")),
						Cell(CellProps{}, g.Text("alice@example.com")),
						Cell(CellProps{}, g.Text("Laptop Pro")),
						Cell(CellProps{}, g.Text("1")),
						Cell(CellProps{}, g.Text("$1,299.00")),
						Cell(CellProps{}, g.Text("$1,299.00")),
						Cell(CellProps{}, g.Text("Delivered")),
						Cell(CellProps{}, g.Text("2024-01-15")),
					),
					Row(RowProps{},
						Cell(CellProps{}, g.Text("ORD-002")),
						Cell(CellProps{}, g.Text("Bob Johnson")),
						Cell(CellProps{}, g.Text("bob@example.com")),
						Cell(CellProps{}, g.Text("Wireless Mouse")),
						Cell(CellProps{}, g.Text("2")),
						Cell(CellProps{}, g.Text("$49.99")),
						Cell(CellProps{}, g.Text("$99.98")),
						Cell(CellProps{}, g.Text("Processing")),
						Cell(CellProps{}, g.Text("2024-01-16")),
					),
				),
			),
		),

		// Data Table Example
		html.Div(
			html.Class("space-y-4"),
			html.H3(html.Class("text-lg font-semibold"), g.Text("Data Table")),
			html.P(html.Class("text-sm text-muted-foreground"), g.Text("A more complex data table with features")),
			html.Div(
				html.Class("space-y-4"),
				// Search/Filter
				html.Div(
					html.Class("flex items-center justify-between"),
					html.Input(
						html.Type("text"),
						html.Class("max-w-sm px-3 py-2 border rounded-md text-sm"),
						g.Attr("placeholder", "Filter emails..."),
					),
					html.Div(
						html.Class("flex gap-2"),
						html.Button(html.Type("button"), html.Class("px-3 py-2 border rounded text-sm"), g.Text("Export")),
						html.Button(html.Type("button"), html.Class("px-3 py-2 bg-primary text-primary-foreground rounded text-sm"), g.Text("Add User")),
					),
				),
				// Table
				TableComponent(Props{},
					HeaderComponent(Props{},
						Row(RowProps{},
							Head(HeadProps{Class: "w-12"},
								html.Input(html.Type("checkbox"), html.Class("h-4 w-4")),
							),
							Head(HeadProps{Sortable: true}, g.Text("Name")),
							Head(HeadProps{Sortable: true}, g.Text("Email")),
							Head(HeadProps{}, g.Text("Role")),
							Head(HeadProps{Sortable: true}, g.Text("Created")),
							Head(HeadProps{}, g.Text("Status")),
							Head(HeadProps{Align: "right"}, g.Text("Actions")),
						),
					),
					Body(Props{},
						Row(RowProps{},
							Cell(CellProps{},
								html.Input(html.Type("checkbox"), html.Class("h-4 w-4")),
							),
							Cell(CellProps{Class: "font-medium"}, g.Text("Emma Wilson")),
							Cell(CellProps{}, g.Text("emma@example.com")),
							Cell(CellProps{}, g.Text("Admin")),
							Cell(CellProps{}, g.Text("Jan 5, 2024")),
							Cell(CellProps{},
								html.Span(html.Class("inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800"),
									g.Text("Active"),
								),
							),
							Cell(CellProps{Align: "right"},
								html.Button(html.Type("button"), html.Class("text-sm hover:underline"), g.Text("Edit")),
							),
						),
						Row(RowProps{},
							Cell(CellProps{},
								html.Input(html.Type("checkbox"), html.Class("h-4 w-4")),
							),
							Cell(CellProps{Class: "font-medium"}, g.Text("Michael Chen")),
							Cell(CellProps{}, g.Text("michael@example.com")),
							Cell(CellProps{}, g.Text("User")),
							Cell(CellProps{}, g.Text("Jan 3, 2024")),
							Cell(CellProps{},
								html.Span(html.Class("inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800"),
									g.Text("Inactive"),
								),
							),
							Cell(CellProps{Align: "right"},
								html.Button(html.Type("button"), html.Class("text-sm hover:underline"), g.Text("Edit")),
							),
						),
					),
				),
				// Pagination
				html.Div(
					html.Class("flex items-center justify-between px-2"),
					html.P(html.Class("text-sm text-muted-foreground"), g.Text("Showing 1 to 2 of 2 results")),
					html.Div(
						html.Class("flex gap-1"),
						html.Button(html.Type("button"), html.Class("px-3 py-1 text-sm border rounded disabled:opacity-50"), g.Attr("disabled", "true"), g.Text("Previous")),
						html.Button(html.Type("button"), html.Class("px-3 py-1 text-sm bg-primary text-primary-foreground rounded"), g.Text("1")),
						html.Button(html.Type("button"), html.Class("px-3 py-1 text-sm border rounded disabled:opacity-50"), g.Attr("disabled", "true"), g.Text("Next")),
					),
				),
			),
		),
	)
}